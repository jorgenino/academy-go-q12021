// Code generated by MockGen. DO NOT EDIT.
// Source: http.go

// Package mock_httpservice is a generated GoMock package.
package mock

import (
	model "jobs/domain/model"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockNewHTTPService is a mock of NewHTTPService interface.
type MockNewHTTPService struct {
	ctrl     *gomock.Controller
	recorder *MockNewHTTPServiceMockRecorder
}

// MockNewHTTPServiceMockRecorder is the mock recorder for MockNewHTTPService.
type MockNewHTTPServiceMockRecorder struct {
	mock *MockNewHTTPService
}

// NewMockNewHTTPService creates a new mock instance.
func NewMockNewHTTPService(ctrl *gomock.Controller) *MockNewHTTPService {
	mock := &MockNewHTTPService{ctrl: ctrl}
	mock.recorder = &MockNewHTTPServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNewHTTPService) EXPECT() *MockNewHTTPServiceMockRecorder {
	return m.recorder
}

// GetJobs mocks base method.
func (m *MockNewHTTPService) GetJobs() ([]model.ExtJob, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetJobs")
	ret0, _ := ret[0].([]model.ExtJob)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetJobs indicates an expected call of GetJobs.
func (mr *MockNewHTTPServiceMockRecorder) GetJobs() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetJobs", reflect.TypeOf((*MockNewHTTPService)(nil).GetJobs))
}
